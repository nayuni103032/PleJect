package conn;

import java.io.File;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

import conn.RequestMapping.RequestMethod;
import dao.RoomDao;
import model.RoomDataBean;
import conn.RequestMapping;

public class RoomController extends ActionAnnotation {

	@Override
	public void initProcess(HttpServletRequest request, HttpServletResponse reponse) {
		HttpSession session = request.getSession();

		try {
			request.setCharacterEncoding("utf-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@RequestMapping(value = "roomWriteForm", method = RequestMethod.GET)
	public String Room_writeFrom(HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();

	
		
		return "/view/content/room/roomWriteForm.jsp";
	}
	
	@RequestMapping(value = "roomWritePro", method = RequestMethod.GET)
	public String Room_writePro(HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		
		String realFolder="";
		String saveFolder="uploadFile";
		String encType="UTF-8";
		int maxSize = 10*1024*1024;
		ServletContext context = getServletContext();
		realFolder = context.getRealPath(saveFolder);
		
		try{
			MultipartRequest multi = new MultipartRequest(request, realFolder,maxSize,encType, new DefaultFileRenamePolicy());
			RoomDataBean Room = new RoomDataBean();
			Enumeration files = multi.getFileNames();
			
			if(files.hasMoreElements()){
				String name = (String)files.nextElement();
				File file = multi.getFile(name);
				if(file !=null){
					Room.setPhoto(file.getName());
				}else{
					Room.setPhoto("");
				}
				
			}
			
			Room.setContent(request.getParameter("content"));
			Room.setHost(request.getParameter("host"));
			Room.setLike_ca(Integer.parseInt(request.getParameter("like_ca")));
			Room.setLike_sub(Integer.parseInt(request.getParameter("like_sub")));
			Room.setLocation(request.getParameter("location"));
			Room.setMeet_data(Integer.parseInt(request.getParameter("meet_data")));
			Room.setMeet_title(request.getParameter("meet_title"));
			Room.setMembercnt(Integer.parseInt(request.getParameter("membercnt")));
			
			RoomDao service = RoomDao.getInstance();
			ser
			
		}
		
		
		
		
		
		
		
		
		
	
		
		return "/view/content/room/roomWriteForm.jsp";
	}
}
